<%
  path = case result
         when Lexeme
           pub_language_lexeme_path(result.language, result)
         when Root
           pub_language_root_path(result.language, result)
         when Affix
           pub_language_affix_path(result.language, result)
         else
           polymorphic_path([:pub, result])
         end

  summary_html = ""
  if result.is_a?(ContentEntry)
    summary_source = result.annotation.presence || result.body
    if summary_source.present?
      summary_html = truncate_html(render_markdown(summary_source), length: 250, omission: '...')
    end
  elsif result.is_a?(Lexeme) && result.words.first&.definition.present?
    summary_source = result.words.first.definition
    summary_html = truncate_html(render_markdown(summary_source), length: 250, omission: '...')
  elsif result.is_a?(Root) || result.is_a?(Affix)
    summary_source = result.meaning
    if summary_source.present?
      summary_html = truncate_html(render_markdown(summary_source), length: 250, omission: '...')
    end
  end
%>

<%= link_to path, class: "block p-4 bg-white shadow rounded-lg border hover:border-blue-400 group" do %>
  <div class="flex justify-between items-baseline">
    <h2 class="text-xl font-semibold text-blue-700 group-hover:underline">
      <%= result.try(:spelling) || result.try(:text) || result.title %>
    </h2>
    <span class="text-xs font-medium uppercase text-gray-500">
      <%= result.is_a?(Lexeme) ? "Word" : result.class.name.underscore.humanize %>
    </span>
  </div>

  <% if summary_html.present? %>
    <div class="prose prose-sm max-w-none text-gray-600 mt-2" data-controller="wikilink-preview">
      <%= summary_html %>
    </div>
  <% end %>
<% end %>
