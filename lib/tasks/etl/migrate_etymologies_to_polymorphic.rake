namespace :etl do
  desc "Migrates existing etymologies from word_id to a polymorphic association before the schema change."
  task migrate_etymologies_to_polymorphic: :environment do

    # –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ –¥–æ –º–∏–≥—Ä–∞—Ü–∏–∏
    class TempEtymology < ApplicationRecord
      self.table_name = 'etymologies'
      # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å —Å–∞–º–∞ –ø–æ —Å–µ–±–µ –Ω–µ –ø–æ–ª–∏–º–æ—Ä—Ñ–Ω–∞—è,
      # —á—Ç–æ–±—ã Rails –Ω–µ –∏—Å–∫–∞–ª –∫–æ–ª–æ–Ω–∫—É `etymologizable_type` —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏.
      self.inheritance_column = :_type_disabled
    end

    puts "üöÄ Starting etymology data migration..."

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ –∏—Ö –µ—â—ë –Ω–µ—Ç
    connection = ActiveRecord::Base.connection
    unless connection.column_exists?(:etymologies, :etymologizable_id)
      connection.add_column :etymologies, :etymologizable_id, :bigint
    end
    unless connection.column_exists?(:etymologies, :etymologizable_type)
      connection.add_column :etymologies, :etymologizable_type, :string
    end

    # –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å, —á—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
    connection.add_index :etymologies, [:etymologizable_type, :etymologizable_id], name: "temp_poly_index", if_not_exists: true

    count = 0
    ActiveRecord::Base.transaction do
      TempEtymology.where(etymologizable_id: nil).find_each do |etymology|
        etymology.update_columns(
          etymologizable_id: etymology.word_id,
          etymologizable_type: 'Word'
        )
        count += 1
      end
    end

    puts "‚úÖ Done. Migrated #{count} etymology records to the new polymorphic columns."

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å
    connection.remove_index :etymologies, name: "temp_poly_index", if_exists: true
  end
end
